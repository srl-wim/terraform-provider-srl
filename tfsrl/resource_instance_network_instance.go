/*
Package tfsrl is a generated package which contains definitions
of structs which represent a Terraform resource. 

This package was generated by ygocodegen
using the following YANG input files:
	- yang/srl
Imported modules were sourced from:
	- yang/ietf
*/
package tfsrl

import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	log "github.com/sirupsen/logrus"
)

// resourceNetworkInstanceInstanceString function
func resourceNetworkInstanceInstanceString(d resourceIDStringer) string {
	return resourceIDString(d, "network_instance_instance")
}

// resourceNetworkInstanceInstance function
func resourceNetworkInstanceInstance() *schema.Resource {
	return &schema.Resource{
		CreateContext: resourceNetworkInstanceInstanceCreate,
		ReadContext:   resourceNetworkInstanceInstanceRead,
		UpdateContext: resourceNetworkInstanceInstanceUpdate,
		DeleteContext: resourceNetworkInstanceInstanceDelete,

		Importer: &schema.ResourceImporter{
			StateContext: schema.ImportStatePassthroughContext,
		},

		Timeouts: &schema.ResourceTimeout{
			Create: schema.DefaultTimeout(5 * time.Minute),
			Read:   schema.DefaultTimeout(5 * time.Minute),
			Update: schema.DefaultTimeout(5 * time.Minute),
			Delete: schema.DefaultTimeout(5 * time.Minute),
		},
		Schema: map[string]*schema.Schema{
        "network_instance": {
            Type:     schema.TypeList,
            Optional: true,
            MaxItems: 1,
            Elem: &schema.Resource{
            	Schema: map[string]*schema.Schema{
                    "admin_state": {
                        Type:     schema.TypeString,
                        Optional: true,
                        Default: "enable",
                    },
                    "aft": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 16,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                                "address_family": {
                                    Type:     schema.TypeString,
                                    Required: true,
                                    ForceNew: true,
                                },
                            },
                        },
                    },
                    "aggregate_routes": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 1,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                                "route": {
                                    Type:     schema.TypeList,
                                    Optional: true,
                                    MaxItems: 16,
                                    Elem: &schema.Resource{
                                    	Schema: map[string]*schema.Schema{
                                            "admin_state": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                                Default: "enable",
                                            },
                                            "aggregator": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "address": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "as_number": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                    },
                                                },
                                            },
                                            "communities": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "add": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                    },
                                                },
                                            },
                                            "generate_icmp": {
                                                Type:     schema.TypeBool,
                                                Optional: true,
                                            },
                                            "prefix": {
                                                Type:     schema.TypeString,
                                                Required: true,
                                                ForceNew: true,
                                            },
                                            "summary_only": {
                                                Type:     schema.TypeBool,
                                                Optional: true,
                                                Default: false,
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                    "description": {
                        Type:     schema.TypeString,
                        Optional: true,
                    },
                    "icmp": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 1,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                            },
                        },
                    },
                    "icmp6": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 1,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                            },
                        },
                    },
                    "interface": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 16,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                                "name": {
                                    Type:     schema.TypeString,
                                    Required: true,
                                    ForceNew: true,
                                },
                            },
                        },
                    },
                    "ip_forwarding": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 1,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                                "receive_ipv4_check": {
                                    Type:     schema.TypeBool,
                                    Optional: true,
                                    Default: true,
                                },
                                "receive_ipv6_check": {
                                    Type:     schema.TypeBool,
                                    Optional: true,
                                    Default: true,
                                },
                            },
                        },
                    },
                    "ip_load_balancing": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 1,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                                "resilient_hash_prefix": {
                                    Type:     schema.TypeList,
                                    Optional: true,
                                    MaxItems: 16,
                                    Elem: &schema.Resource{
                                    	Schema: map[string]*schema.Schema{
                                            "hash_buckets_per_path": {
                                                Type:     schema.TypeInt,
                                                Optional: true,
                                                Default: "1",
                                            },
                                            "ip_prefix": {
                                                Type:     schema.TypeString,
                                                Required: true,
                                                ForceNew: true,
                                            },
                                            "max_paths": {
                                                Type:     schema.TypeInt,
                                                Optional: true,
                                                Default: "1",
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                    "mpls": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 1,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                                "admin_state": {
                                    Type:     schema.TypeString,
                                    Optional: true,
                                    Default: "disable",
                                },
                                "static_mpls_entry": {
                                    Type:     schema.TypeList,
                                    Optional: true,
                                    MaxItems: 16,
                                    Elem: &schema.Resource{
                                    	Schema: map[string]*schema.Schema{
                                            "collect_stats": {
                                                Type:     schema.TypeBool,
                                                Optional: true,
                                                Default: false,
                                            },
                                            "next_hop_group": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                            },
                                            "operation": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                                Default: "swap",
                                            },
                                            "preference": {
                                                Type:     schema.TypeInt,
                                                Optional: true,
                                                Default: "5",
                                            },
                                            "top_label": {
                                                Type:     schema.TypeString,
                                                Required: true,
                                                ForceNew: true,
                                            },
                                        },
                                    },
                                },
                                "ttl_propagation": {
                                    Type:     schema.TypeBool,
                                    Optional: true,
                                    Default: false,
                                },
                            },
                        },
                    },
                    "mtu": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 1,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                                "path_mtu_discovery": {
                                    Type:     schema.TypeBool,
                                    Optional: true,
                                    Default: true,
                                },
                            },
                        },
                    },
                    "name": {
                        Type:     schema.TypeString,
                        Required: true,
                        ForceNew: true,
                    },
                    "next_hop_groups": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 1,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                                "group": {
                                    Type:     schema.TypeList,
                                    Optional: true,
                                    MaxItems: 16,
                                    Elem: &schema.Resource{
                                    	Schema: map[string]*schema.Schema{
                                            "admin_state": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                                Default: "enable",
                                            },
                                            "blackhole": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "generate_icmp": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: false,
                                                        },
                                                    },
                                                },
                                            },
                                            "collect_stats": {
                                                Type:     schema.TypeBool,
                                                Optional: true,
                                                Default: false,
                                            },
                                            "name": {
                                                Type:     schema.TypeString,
                                                Required: true,
                                                ForceNew: true,
                                            },
                                            "nexthop": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 65536,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "admin_state": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                            Default: "enable",
                                                        },
                                                        "index": {
                                                            Type:     schema.TypeInt,
                                                            Required: true,
                                                            ForceNew: true,
                                                        },
                                                        "ip_address": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "pushed_mpls_label_stack": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "resolve": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: true,
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                    "protocols": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 1,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                                "bgp": {
                                    Type:     schema.TypeList,
                                    Optional: true,
                                    MaxItems: 1,
                                    Elem: &schema.Resource{
                                    	Schema: map[string]*schema.Schema{
                                            "admin_state": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                                Default: "enable",
                                            },
                                            "as_path_options": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "allow_own_as": {
                                                            Type:     schema.TypeInt,
                                                            Optional: true,
                                                            Default: "0",
                                                        },
                                                    },
                                                },
                                            },
                                            "autonomous_system": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                            },
                                            "convergence": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "min_wait_to_advertise": {
                                                            Type:     schema.TypeInt,
                                                            Optional: true,
                                                            Default: "0",
                                                        },
                                                    },
                                                },
                                            },
                                            "dynamic_neighbors": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "accept": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "match": {
                                                                        Type:     schema.TypeList,
                                                                        Optional: true,
                                                                        MaxItems: 16,
                                                                        Elem: &schema.Resource{
                                                                        	Schema: map[string]*schema.Schema{
                                                                                "allowed_peer_as": {
                                                                                    Type:     schema.TypeString,
                                                                                    Optional: true,
                                                                                },
                                                                                "group_id_range": {
                                                                                    Type:     schema.TypeString,
                                                                                    Optional: true,
                                                                                },
                                                                                "peer_group": {
                                                                                    Type:     schema.TypeString,
                                                                                    Optional: true,
                                                                                },
                                                                                "prefix": {
                                                                                    Type:     schema.TypeString,
                                                                                    Optional: true,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    "max_sessions": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                        Default: "0",
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            "ebgp_default_policy": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "export_reject_all": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: true,
                                                        },
                                                        "import_reject_all": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: true,
                                                        },
                                                    },
                                                },
                                            },
                                            "export_policy": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                            },
                                            "failure_detection": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "enable_bfd": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: false,
                                                        },
                                                        "fast_failover": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: true,
                                                        },
                                                    },
                                                },
                                            },
                                            "graceful_restart": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "admin_state": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                            Default: "disable",
                                                        },
                                                        "stale_routes_time": {
                                                            Type:     schema.TypeInt,
                                                            Optional: true,
                                                            Default: "360",
                                                        },
                                                    },
                                                },
                                            },
                                            "group": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 16,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "admin_state": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                            Default: "enable",
                                                        },
                                                        "as_path_options": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "allow_own_as": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "description": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "export_policy": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "failure_detection": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "enable_bfd": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                    "fast_failover": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "graceful_restart": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "admin_state": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "stale_routes_time": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "group_name": {
                                                            Type:     schema.TypeString,
                                                            Required: true,
                                                            ForceNew: true,
                                                        },
                                                        "import_policy": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "ipv4_unicast": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "admin_state": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "advertise_ipv6_next_hops": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                    "prefix_limit": {
                                                                        Type:     schema.TypeList,
                                                                        Optional: true,
                                                                        MaxItems: 1,
                                                                        Elem: &schema.Resource{
                                                                        	Schema: map[string]*schema.Schema{
                                                                                "max_received_routes": {
                                                                                    Type:     schema.TypeInt,
                                                                                    Optional: true,
                                                                                    Default: "4294967295",
                                                                                },
                                                                                "warning_threshold_pct": {
                                                                                    Type:     schema.TypeString,
                                                                                    Optional: true,
                                                                                    Default: "90",
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    "receive_ipv6_next_hops": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "ipv6_unicast": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "admin_state": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "prefix_limit": {
                                                                        Type:     schema.TypeList,
                                                                        Optional: true,
                                                                        MaxItems: 1,
                                                                        Elem: &schema.Resource{
                                                                        	Schema: map[string]*schema.Schema{
                                                                                "max_received_routes": {
                                                                                    Type:     schema.TypeInt,
                                                                                    Optional: true,
                                                                                    Default: "4294967295",
                                                                                },
                                                                                "warning_threshold_pct": {
                                                                                    Type:     schema.TypeString,
                                                                                    Optional: true,
                                                                                    Default: "90",
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "local_as": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 4294967295,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "as_number": {
                                                                        Type:     schema.TypeString,
                                                                        Required: true,
                                                                        ForceNew: true,
                                                                    },
                                                                    "prepend_global_as": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                        Default: true,
                                                                    },
                                                                    "prepend_local_as": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                        Default: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "local_preference": {
                                                            Type:     schema.TypeInt,
                                                            Optional: true,
                                                        },
                                                        "next_hop_self": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: false,
                                                        },
                                                        "peer_as": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "send_community": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "large": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                    "standard": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "send_default_route": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "export_policy": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "ipv4_unicast": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                        Default: false,
                                                                    },
                                                                    "ipv6_unicast": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                        Default: false,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "timers": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "connect_retry": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                        Default: "120",
                                                                    },
                                                                    "hold_time": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                        Default: "90",
                                                                    },
                                                                    "keepalive_interval": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                    "minimum_advertisement_interval": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                        Default: "5",
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "trace_options": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "flag": {
                                                                        Type:     schema.TypeList,
                                                                        Optional: true,
                                                                        MaxItems: 1,
                                                                        Elem: &schema.Resource{
                                                                        	Schema: map[string]*schema.Schema{
                                                                                "modifier": {
                                                                                    Type:     schema.TypeString,
                                                                                    Optional: true,
                                                                                },
                                                                                "name": {
                                                                                    Type:     schema.TypeString,
                                                                                    Required: true,
                                                                                    ForceNew: true,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "transport": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "local_address": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "passive_mode": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                        Default: false,
                                                                    },
                                                                    "tcp_mss": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            "import_policy": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                            },
                                            "ipv4_unicast": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "admin_state": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                            Default: "enable",
                                                        },
                                                        "advertise_ipv6_next_hops": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: false,
                                                        },
                                                        "convergence": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "max_wait_to_advertise": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                        Default: "0",
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "multipath": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "allow_multiple_as": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                        Default: true,
                                                                    },
                                                                    "max_paths_level_1": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                        Default: "1",
                                                                    },
                                                                    "max_paths_level_2": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                        Default: "1",
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "receive_ipv6_next_hops": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: false,
                                                        },
                                                    },
                                                },
                                            },
                                            "ipv6_unicast": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "admin_state": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                            Default: "disable",
                                                        },
                                                        "convergence": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "max_wait_to_advertise": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                        Default: "0",
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "multipath": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "allow_multiple_as": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                        Default: true,
                                                                    },
                                                                    "max_paths_level_1": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                        Default: "1",
                                                                    },
                                                                    "max_paths_level_2": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                        Default: "1",
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            "local_preference": {
                                                Type:     schema.TypeInt,
                                                Optional: true,
                                                Default: "100",
                                            },
                                            "neighbor": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 16,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "admin_state": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                            Default: "enable",
                                                        },
                                                        "as_path_options": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "allow_own_as": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "description": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "export_policy": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "failure_detection": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "enable_bfd": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                    "fast_failover": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "graceful_restart": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "admin_state": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "stale_routes_time": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "import_policy": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "ipv4_unicast": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "admin_state": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "advertise_ipv6_next_hops": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                    "prefix_limit": {
                                                                        Type:     schema.TypeList,
                                                                        Optional: true,
                                                                        MaxItems: 1,
                                                                        Elem: &schema.Resource{
                                                                        	Schema: map[string]*schema.Schema{
                                                                                "max_received_routes": {
                                                                                    Type:     schema.TypeInt,
                                                                                    Optional: true,
                                                                                },
                                                                                "warning_threshold_pct": {
                                                                                    Type:     schema.TypeString,
                                                                                    Optional: true,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    "receive_ipv6_next_hops": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "ipv6_unicast": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "admin_state": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "prefix_limit": {
                                                                        Type:     schema.TypeList,
                                                                        Optional: true,
                                                                        MaxItems: 1,
                                                                        Elem: &schema.Resource{
                                                                        	Schema: map[string]*schema.Schema{
                                                                                "max_received_routes": {
                                                                                    Type:     schema.TypeInt,
                                                                                    Optional: true,
                                                                                },
                                                                                "warning_threshold_pct": {
                                                                                    Type:     schema.TypeString,
                                                                                    Optional: true,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "local_as": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 4294967295,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "as_number": {
                                                                        Type:     schema.TypeString,
                                                                        Required: true,
                                                                        ForceNew: true,
                                                                    },
                                                                    "prepend_global_as": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                    "prepend_local_as": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "local_preference": {
                                                            Type:     schema.TypeInt,
                                                            Optional: true,
                                                        },
                                                        "next_hop_self": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                        },
                                                        "peer_address": {
                                                            Type:     schema.TypeString,
                                                            Required: true,
                                                            ForceNew: true,
                                                        },
                                                        "peer_as": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "peer_group": {
                                                            Type:     schema.TypeString,
                                                            Optional: true,
                                                        },
                                                        "send_community": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "large": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                    "standard": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "send_default_route": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "export_policy": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "ipv4_unicast": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                    "ipv6_unicast": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "timers": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "connect_retry": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                    "hold_time": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                    "keepalive_interval": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                    "minimum_advertisement_interval": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "trace_options": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "flag": {
                                                                        Type:     schema.TypeList,
                                                                        Optional: true,
                                                                        MaxItems: 1,
                                                                        Elem: &schema.Resource{
                                                                        	Schema: map[string]*schema.Schema{
                                                                                "modifier": {
                                                                                    Type:     schema.TypeString,
                                                                                    Optional: true,
                                                                                },
                                                                                "name": {
                                                                                    Type:     schema.TypeString,
                                                                                    Required: true,
                                                                                    ForceNew: true,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                        },
                                                        "transport": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "local_address": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "passive_mode": {
                                                                        Type:     schema.TypeBool,
                                                                        Optional: true,
                                                                    },
                                                                    "tcp_mss": {
                                                                        Type:     schema.TypeInt,
                                                                        Optional: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            "preference": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "ebgp": {
                                                            Type:     schema.TypeInt,
                                                            Optional: true,
                                                            Default: "170",
                                                        },
                                                        "ibgp": {
                                                            Type:     schema.TypeInt,
                                                            Optional: true,
                                                            Default: "170",
                                                        },
                                                    },
                                                },
                                            },
                                            "route_advertisement": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "rapid_withdrawal": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: false,
                                                        },
                                                        "wait_for_fib_install": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: true,
                                                        },
                                                    },
                                                },
                                            },
                                            "router_id": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                            },
                                            "send_community": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "large": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: true,
                                                        },
                                                        "standard": {
                                                            Type:     schema.TypeBool,
                                                            Optional: true,
                                                            Default: true,
                                                        },
                                                    },
                                                },
                                            },
                                            "trace_options": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "flag": {
                                                            Type:     schema.TypeList,
                                                            Optional: true,
                                                            MaxItems: 1,
                                                            Elem: &schema.Resource{
                                                            	Schema: map[string]*schema.Schema{
                                                                    "modifier": {
                                                                        Type:     schema.TypeString,
                                                                        Optional: true,
                                                                    },
                                                                    "name": {
                                                                        Type:     schema.TypeString,
                                                                        Required: true,
                                                                        ForceNew: true,
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                            "transport": {
                                                Type:     schema.TypeList,
                                                Optional: true,
                                                MaxItems: 1,
                                                Elem: &schema.Resource{
                                                	Schema: map[string]*schema.Schema{
                                                        "tcp_mss": {
                                                            Type:     schema.TypeInt,
                                                            Optional: true,
                                                            Default: "1024",
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                },
                                "linux": {
                                    Type:     schema.TypeList,
                                    Optional: true,
                                    MaxItems: 1,
                                    Elem: &schema.Resource{
                                    	Schema: map[string]*schema.Schema{
                                            "export_neighbors": {
                                                Type:     schema.TypeBool,
                                                Optional: true,
                                                Default: true,
                                            },
                                            "export_routes": {
                                                Type:     schema.TypeBool,
                                                Optional: true,
                                                Default: false,
                                            },
                                            "import_routes": {
                                                Type:     schema.TypeBool,
                                                Optional: true,
                                                Default: false,
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                    "router_id": {
                        Type:     schema.TypeString,
                        Optional: true,
                    },
                    "static_routes": {
                        Type:     schema.TypeList,
                        Optional: true,
                        MaxItems: 1,
                        Elem: &schema.Resource{
                        	Schema: map[string]*schema.Schema{
                                "route": {
                                    Type:     schema.TypeList,
                                    Optional: true,
                                    MaxItems: 16,
                                    Elem: &schema.Resource{
                                    	Schema: map[string]*schema.Schema{
                                            "admin_state": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                                Default: "enable",
                                            },
                                            "metric": {
                                                Type:     schema.TypeInt,
                                                Optional: true,
                                                Default: "1",
                                            },
                                            "next_hop_group": {
                                                Type:     schema.TypeString,
                                                Optional: true,
                                            },
                                            "preference": {
                                                Type:     schema.TypeInt,
                                                Optional: true,
                                                Default: "5",
                                            },
                                            "prefix": {
                                                Type:     schema.TypeString,
                                                Required: true,
                                                ForceNew: true,
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                    "type": {
                        Type:     schema.TypeString,
                        Optional: true,
                        Default: "default",
                    },
                },
            },
        },

        },
    }
}

func resourceNetworkInstanceInstanceCreate(ctx context.Context, d *schema.ResourceData, meta interface{}) diag.Diagnostics {
	log.Infof("Beginning Create: %s", resourceNetworkInstanceInstanceString(d))
	target := meta.(*Target)
	 
	rn := "network_instance"
	rk := "name"
	key, err := getResourceListKey(&rn, &rk, d)
	if err != nil {
		return diag.FromErr(err)
	}
	p := "/"
	v := ""
	
	req, err := target.CreateSetRequest(&p, &v, d)
	if err != nil {
		return diag.FromErr(err)
	}

	response, err := target.Set(ctx, req)
	if err != nil {
		return diag.FromErr(err)
	}

	replaceInKeys(d.Get(v), "-", "_")
	log.Debugf("Set response: %v", response)

	d.SetId(key)
	return resourceNetworkInstanceInstanceRead(ctx, d, meta)
}

// func resourceNetworkInstanceInstanceRead(ctx context.Context, d *schema.ResourceData, meta interface{}) diag.Diagnostics {
// 	log.Infof("Beginning Read: %s", resourceNetworkInstanceInstanceString(d))
// 	target := meta.(*Target)

// 	 
// 	p := fmt.Sprintf("/network-instance[name=%s]", d.Id())
// 	
// 	req, err := target.CreateGetRequest(&p, "CONFIG", d)
// 	if err != nil {
// 		return diag.FromErr(err)
// 	}
// 	response, err := target.Get(ctx, req)
// 	if err != nil {
// 		return diag.FromErr(err)
// 	}

// 	log.Debugf("Get Gnmi read response: %v", response)

// 	return nil
// }
func resourceNetworkInstanceInstanceRead(ctx context.Context, d *schema.ResourceData, meta interface{}) diag.Diagnostics {
	log.Infof("Beginning Read: %s", resourceNetworkInstanceInstanceString(d))
	target := meta.(*Target)

	// Warning or errors can be collected in a slice type
	var diags diag.Diagnostics

	 
	//rn := "network_instance"
	rk := "name"
	key:= d.Id()

	p := fmt.Sprintf("/network-instance[name=%s]", key)
	

	req, err := target.CreateGetRequest(&p, "CONFIG", d)
	if err != nil {
		return diag.FromErr(err)
	}
	log.Infof("Get Request: %v", req)
	response, err := target.Get(ctx, req)
	if err != nil {
		return diag.FromErr(err)
	}
	log.Debugf("Get Gnmi read response: %v", response)

	u, err := target.HandleGetRespone(response)
	if err != nil {
		return diag.FromErr(err)
	}
	for i, upd := range u {
		// we expect a single response in the get since we target the explicit resource
		log.Debugf("get response: index: %d, update: %v", i, upd)
		if i <= 0 {
			data := make([]map[string]interface{}, 0)
			switch x := upd.Values["network-instance"].(type) {
			case map[string]interface{}:
				 
				// add key to the get resp data since it is not returned in the gnmi data
				x[rk] = key
				// append the get resp to data
				
				data = append(data, x)
			}
			log.Debugf("get response: index: %d, data: %v", i, data)
			if err := d.Set("network_instance", data); err != nil {
				return diag.FromErr(err)
			}
			// always run
			 
			d.SetId(key)
			
			return diags
		} else {
			diags = append(diags, diag.Diagnostic{
				Severity: diag.Error,
				Summary:  "Unexpected multiple response",
				Detail:   "We only expect a single response from the read/get response",
			})
			return diags
		}
	}
	// when the response is empty no data exists in the system
	log.Debugf("get response: empty set id to nill")
	d.SetId("")
	return diags
}

func resourceNetworkInstanceInstanceUpdate(ctx context.Context, d *schema.ResourceData, meta interface{}) diag.Diagnostics {
	log.Infof("Beginning Update: %s", resourceNetworkInstanceInstanceString(d))
	target := meta.(*Target)
	 
	rn := "network_instance"
	rk := "name"
	key, err := getResourceListKey(&rn, &rk, d)
	if err != nil {
		return diag.FromErr(err)
	}
	p := "/"
	v := ""
	

	req, err := target.CreateSetRequest(&p, &v, d)
	if err != nil {
		return diag.FromErr(err)
	}

	response, err := target.Set(ctx, req)
	if err != nil {
		return diag.FromErr(err)
	}

	replaceInKeys(d.Get(v), "-", "_")
	log.Debugf("Set response: %v", response)

	d.SetId(key)
	return resourceNetworkInstanceInstanceRead(ctx, d, meta)
}

func resourceNetworkInstanceInstanceDelete(ctx context.Context, d *schema.ResourceData, meta interface{}) diag.Diagnostics {
	log.Debugf("Beginning delete: %s", resourceNetworkInstanceInstanceString(d))
	target := meta.(*Target)

	 
	p := fmt.Sprintf("/network-instance[name=%s]", d.Id())
	
	req, err := target.CreateDeleteRequest(&p, d)
	if err != nil {
		return diag.FromErr(err)
	}

	response, err := target.Set(ctx, req)
	if err != nil {
		return diag.FromErr(err)
	}

	log.Debugf("Gnmi Delete Response: %v", response)

	d.SetId("")
	return nil
}
